{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "overrides": [
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    // Prevent possible issues
    "default-case": "error",
    "eqeqeq": "error",
    "func-name-matching": [
      "error",
      "never"
    ],
    "newline-before-return": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-cond-assign": [
      "error",
      "always"
    ],
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-constructor-return": "error",
    "no-duplicate-imports": "error",
    "no-fallthrough": "error",
    "no-inner-declarations": "error",
    "no-magic-numbers": "error",
    "no-param-reassign": "error",
    "no-plusplus": "error",
    "no-promise-executor-return": "error",
    "no-redeclare": "error",
    "no-shadow": "error",
    "no-sparse-arrays": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": "error",
    "no-use-before-define": "error",
    "use-isnan": "error",
    "valid-typeof": "error",
    // Improvements + Clean code
    "accessor-pairs": "error",
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "camelcase": "error",
    "curly": [
      "warn",
      "multi"
    ],
    "grouped-accessor-pairs": "error",
    "id-length": [
      "error",
      {
        "min": 3
      }
    ],
    "id-match": "error",
    "init-declarations": [
      "error",
      "always"
    ],
    "no-alert": "warn",
    "no-console": "warn",
    "no-delete-var": "error",
    "no-else-return": "error",
    "no-empty": "error",
    "no-floating-decimal": "error",
    "no-nested-ternary": "error",
    "no-unneeded-ternary": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-destructuring": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-template": "error",
    "require-await": "error",
    "vars-on-top": "error",
    "yoda": "error",
    // Visual Coding
    "array-bracket-newline": ["error", "consistent"],
    "array-bracket-spacing": "error",
    "array-element-newline": "error",
    "arrow-parens": "error",
    "arrow-spacing": "error",
    "block-spacing": "error",
    "brace-style": [
      "error",
      "1tbs"
    ],
    "comma-spacing": "error",
    "comma-style": "error",
    "computed-property-spacing": "error",
    "func-call-spacing": "error",
    "function-call-argument-newline": [
      "error",
      "consistent"
    ],
    "key-spacing": "error",
    "keyword-spacing": "error",
    "lines-between-class-members": "error",
    "max-len": [
      "error",
      {
        "code": 100,
        "tabWidth": 2
      }
    ],
    "no-extra-parens": "error",
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": "error",
    "no-whitespace-before-property": "error",
    "nonblock-statement-body-position": "error",
    "object-curly-spacing": ["error", "always"],
    "object-property-newline": "error",
    "operator-linebreak": [
      "error",
      "before"
    ],
    "padded-blocks": "error",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": [
          "const",
          "let",
          "var"
        ]
      }
    ],
    "quotes": [
      "error",
      "single"
    ],
    "semi": "off"
  }
}
